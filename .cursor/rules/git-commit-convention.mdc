---
description: 
globs: 
alwaysApply: false
---
# 깃 커밋 메시지 작성 규칙

## 기본 형식
```
<타입>: <제목>
```

## 타입 (Type)
- feat - 기능이 새로 추가되었는가?
- fix - 버그를 수정했는가?
- perf - 성능을 개선했는가?(속도, 메모리, 렌더링 등)
- refactor - 코드 구조만 바꿨고, 동작이나 성능은 그대로인가?
- test - 테스트 코드를 추가/수정했는가?
- style - 스타일(공백, 포맷 등)만 바꿨는가?
- docs -  문서만 변경했는가? (README, 주석 등)
- build -  빌드 시스템이나 설정 파일 변경인가?
- ci -  CI/CD 설정을 수정했는가?
- revert - 기존 변경을 되돌리는 목적인가?
- chore - 위에 해당하지 않는 유지보수 작업인가?

## 제목 규칙
- 50자 이내로 작성
- 마침표로 끝내지 않음
- 명령문 형태로 작성 (동사 원형으로 시작)
- 영어로 작성시 첫 글자는 소문자로 시작

## 신규 추가 시 작성법
- 신규 자료 추가 시 docs 타입 사용
- 반드시 아래 형식으로 작성:
  ```
  docs: update {섹션} ({항목1}, {항목2}), {섹션} ({항목1})
  ```
- 섹션은 추가된 자료의 카테고리 명칭
- 항목은 추가된 자료의 이름
- 여러 섹션이나 항목은 쉼표로 구분

## 예시
```
docs: update development practice (Kata-Log), docs (TSDoc)
```
